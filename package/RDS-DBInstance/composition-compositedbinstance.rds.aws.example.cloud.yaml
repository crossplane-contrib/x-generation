## WARNING: This file was autogenerated!
## Manual modifications will be overwritten
## unless ignore: true is set in generate.yaml!
## Last Modification: 10:17:36 on 01-08-2024.

apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  labels:
    example.cloud/provider: example
  name: compositedbinstance.rds.aws.example.cloud
spec:
  compositeTypeRef:
    apiVersion: rds.aws.example.cloud/v1alpha1
    kind: CompositeDBInstance
  patchSets:
  - name: Name
    patches:
    - fromFieldPath: metadata.labels[crossplane.io/claim-name]
      toFieldPath: metadata.annotations[crossplane.io/external-name]
      type: FromCompositeFieldPath
  - name: External-Name
    patches:
    - fromFieldPath: metadata.annotations[crossplane.io/external-name]
      policy:
        fromFieldPath: Optional
      toFieldPath: metadata.annotations[crossplane.io/external-name]
      type: FromCompositeFieldPath
  - name: Common
    patches:
    - fromFieldPath: metadata.labels['crossplane.io/claim-name']
      policy:
        fromFieldPath: Optional
      toFieldPath: metadata.labels['crossplane.io/claim-name']
      type: FromCompositeFieldPath
    - fromFieldPath: metadata.labels['crossplane.io/claim-namespace']
      policy:
        fromFieldPath: Optional
      toFieldPath: metadata.labels['crossplane.io/claim-namespace']
      type: FromCompositeFieldPath
    - fromFieldPath: metadata.labels['crossplane.io/composite']
      policy:
        fromFieldPath: Optional
      toFieldPath: metadata.labels['crossplane.io/composite']
      type: FromCompositeFieldPath
    - fromFieldPath: metadata.labels['external-name']
      policy:
        fromFieldPath: Optional
      toFieldPath: metadata.labels['external-name']
      type: FromCompositeFieldPath
  - name: Parameters
    patches:
    - fromFieldPath: spec.deletionPolicy
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.deletionPolicy
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.allocatedStorage
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.allocatedStorage
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.applyImmediately
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.applyImmediately
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.autoMinorVersionUpgrade
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.autoMinorVersionUpgrade
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.autogeneratePassword
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.autogeneratePassword
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.availabilityZone
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.availabilityZone
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.backupRetentionPeriod
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.backupRetentionPeriod
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.characterSetName
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.characterSetName
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.copyTagsToSnapshot
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.copyTagsToSnapshot
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.customIAMInstanceProfile
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.customIAMInstanceProfile
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.dbClusterIdentifier
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.dbClusterIdentifier
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.dbClusterIdentifierRef.name
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.dbClusterIdentifierRef.name
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.dbClusterIdentifierRef.policy.resolution
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.dbClusterIdentifierRef.policy.resolution
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.dbClusterIdentifierRef.policy.resolve
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.dbClusterIdentifierRef.policy.resolve
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.dbClusterIdentifierSelector.matchControllerRef
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.dbClusterIdentifierSelector.matchControllerRef
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.dbClusterIdentifierSelector.matchLabels
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.dbClusterIdentifierSelector.matchLabels
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.dbClusterIdentifierSelector.policy.resolution
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.dbClusterIdentifierSelector.policy.resolution
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.dbClusterIdentifierSelector.policy.resolve
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.dbClusterIdentifierSelector.policy.resolve
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.dbInstanceClass
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.dbInstanceClass
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.dbName
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.dbName
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.dbParameterGroupName
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.dbParameterGroupName
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.dbParameterGroupNameRef.name
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.dbParameterGroupNameRef.name
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.dbParameterGroupNameRef.policy.resolution
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.dbParameterGroupNameRef.policy.resolution
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.dbParameterGroupNameRef.policy.resolve
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.dbParameterGroupNameRef.policy.resolve
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.dbParameterGroupNameSelector.matchControllerRef
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.dbParameterGroupNameSelector.matchControllerRef
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.dbParameterGroupNameSelector.matchLabels
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.dbParameterGroupNameSelector.matchLabels
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.dbParameterGroupNameSelector.policy.resolution
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.dbParameterGroupNameSelector.policy.resolution
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.dbParameterGroupNameSelector.policy.resolve
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.dbParameterGroupNameSelector.policy.resolve
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.dbSecurityGroups
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.dbSecurityGroups
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.dbSubnetGroupName
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.dbSubnetGroupName
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.dbSubnetGroupNameRef.name
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.dbSubnetGroupNameRef.name
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.dbSubnetGroupNameRef.policy.resolution
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.dbSubnetGroupNameRef.policy.resolution
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.dbSubnetGroupNameRef.policy.resolve
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.dbSubnetGroupNameRef.policy.resolve
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.dbSubnetGroupNameSelector.matchControllerRef
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.dbSubnetGroupNameSelector.matchControllerRef
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.dbSubnetGroupNameSelector.matchLabels
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.dbSubnetGroupNameSelector.matchLabels
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.dbSubnetGroupNameSelector.policy.resolution
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.dbSubnetGroupNameSelector.policy.resolution
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.dbSubnetGroupNameSelector.policy.resolve
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.dbSubnetGroupNameSelector.policy.resolve
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.deletionProtection
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.deletionProtection
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.domain
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.domain
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.domainIAMRoleName
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.domainIAMRoleName
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.domainIAMRoleNameRef.name
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.domainIAMRoleNameRef.name
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.domainIAMRoleNameRef.policy.resolution
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.domainIAMRoleNameRef.policy.resolution
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.domainIAMRoleNameRef.policy.resolve
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.domainIAMRoleNameRef.policy.resolve
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.domainIAMRoleNameSelector.matchControllerRef
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.domainIAMRoleNameSelector.matchControllerRef
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.domainIAMRoleNameSelector.matchLabels
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.domainIAMRoleNameSelector.matchLabels
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.domainIAMRoleNameSelector.policy.resolution
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.domainIAMRoleNameSelector.policy.resolution
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.domainIAMRoleNameSelector.policy.resolve
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.domainIAMRoleNameSelector.policy.resolve
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.enableCloudwatchLogsExports
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.enableCloudwatchLogsExports
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.enableCustomerOwnedIP
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.enableCustomerOwnedIP
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.enableIAMDatabaseAuthentication
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.enableIAMDatabaseAuthentication
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.enablePerformanceInsights
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.enablePerformanceInsights
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.engine
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.engine
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.engineVersion
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.engineVersion
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.finalDBSnapshotIdentifier
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.finalDBSnapshotIdentifier
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.iops
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.iops
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.kmsKeyID
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.kmsKeyID
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.kmsKeyIDRef.name
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.kmsKeyIDRef.name
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.kmsKeyIDRef.policy.resolution
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.kmsKeyIDRef.policy.resolution
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.kmsKeyIDRef.policy.resolve
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.kmsKeyIDRef.policy.resolve
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.kmsKeyIDSelector.matchControllerRef
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.kmsKeyIDSelector.matchControllerRef
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.kmsKeyIDSelector.matchLabels
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.kmsKeyIDSelector.matchLabels
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.kmsKeyIDSelector.policy.resolution
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.kmsKeyIDSelector.policy.resolution
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.kmsKeyIDSelector.policy.resolve
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.kmsKeyIDSelector.policy.resolve
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.licenseModel
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.licenseModel
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.masterUserPasswordSecretRef.key
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.masterUserPasswordSecretRef.key
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.masterUserPasswordSecretRef.name
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.masterUserPasswordSecretRef.name
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.masterUserPasswordSecretRef.namespace
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.masterUserPasswordSecretRef.namespace
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.masterUsername
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.masterUsername
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.maxAllocatedStorage
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.maxAllocatedStorage
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.monitoringInterval
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.monitoringInterval
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.monitoringRoleARN
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.monitoringRoleARN
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.monitoringRoleArnRef.name
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.monitoringRoleArnRef.name
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.monitoringRoleArnRef.policy.resolution
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.monitoringRoleArnRef.policy.resolution
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.monitoringRoleArnRef.policy.resolve
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.monitoringRoleArnRef.policy.resolve
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.monitoringRoleArnSelector.matchControllerRef
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.monitoringRoleArnSelector.matchControllerRef
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.monitoringRoleArnSelector.matchLabels
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.monitoringRoleArnSelector.matchLabels
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.monitoringRoleArnSelector.policy.resolution
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.monitoringRoleArnSelector.policy.resolution
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.monitoringRoleArnSelector.policy.resolve
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.monitoringRoleArnSelector.policy.resolve
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.multiAZ
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.multiAZ
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.ncharCharacterSetName
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.ncharCharacterSetName
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.optionGroupName
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.optionGroupName
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.performanceInsightsKMSKeyID
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.performanceInsightsKMSKeyID
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.performanceInsightsRetentionPeriod
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.performanceInsightsRetentionPeriod
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.port
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.port
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.preferredBackupWindow
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.preferredBackupWindow
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.preferredMaintenanceWindow
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.preferredMaintenanceWindow
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.processorFeatures
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.processorFeatures
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.promotionTier
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.promotionTier
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.publiclyAccessible
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.publiclyAccessible
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.region
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.region
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.skipFinalSnapshot
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.skipFinalSnapshot
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.storageEncrypted
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.storageEncrypted
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.storageType
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.storageType
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.tdeCredentialARN
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.tdeCredentialARN
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.tdeCredentialPassword
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.tdeCredentialPassword
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.timezone
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.timezone
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.vpcSecurityGroupIDRefs
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.vpcSecurityGroupIDRefs
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.vpcSecurityGroupIDSelector.matchControllerRef
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.vpcSecurityGroupIDSelector.matchControllerRef
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.vpcSecurityGroupIDSelector.matchLabels
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.vpcSecurityGroupIDSelector.matchLabels
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.vpcSecurityGroupIDSelector.policy.resolution
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.vpcSecurityGroupIDSelector.policy.resolution
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.vpcSecurityGroupIDSelector.policy.resolve
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.vpcSecurityGroupIDSelector.policy.resolve
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.vpcSecurityGroupIDs
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.vpcSecurityGroupIDs
      type: FromCompositeFieldPath
    - fromFieldPath: spec.providerConfigRef.name
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.providerConfigRef.name
      type: FromCompositeFieldPath
    - fromFieldPath: spec.providerConfigRef.policy.resolution
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.providerConfigRef.policy.resolution
      type: FromCompositeFieldPath
    - fromFieldPath: spec.providerConfigRef.policy.resolve
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.providerConfigRef.policy.resolve
      type: FromCompositeFieldPath
    - fromFieldPath: spec.publishConnectionDetailsTo.configRef.name
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.publishConnectionDetailsTo.configRef.name
      type: FromCompositeFieldPath
    - fromFieldPath: spec.publishConnectionDetailsTo.configRef.policy.resolution
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.publishConnectionDetailsTo.configRef.policy.resolution
      type: FromCompositeFieldPath
    - fromFieldPath: spec.publishConnectionDetailsTo.configRef.policy.resolve
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.publishConnectionDetailsTo.configRef.policy.resolve
      type: FromCompositeFieldPath
    - fromFieldPath: spec.publishConnectionDetailsTo.metadata.annotations
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.publishConnectionDetailsTo.metadata.annotations
      type: FromCompositeFieldPath
    - fromFieldPath: spec.publishConnectionDetailsTo.metadata.labels
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.publishConnectionDetailsTo.metadata.labels
      type: FromCompositeFieldPath
    - fromFieldPath: spec.publishConnectionDetailsTo.metadata.type
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.publishConnectionDetailsTo.metadata.type
      type: FromCompositeFieldPath
    - fromFieldPath: spec.publishConnectionDetailsTo.name
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.publishConnectionDetailsTo.name
      type: FromCompositeFieldPath
  - name: Labels
    patches:
    - fromFieldPath: metadata.labels['controlling.example.cloud/cost-reference']
      policy:
        fromFieldPath: Optional
      toFieldPath: metadata.labels['controlling.example.cloud/cost-reference']
      type: FromCompositeFieldPath
    - fromFieldPath: metadata.labels['controlling.example.cloud/owner']
      policy:
        fromFieldPath: Optional
      toFieldPath: metadata.labels['controlling.example.cloud/owner']
      type: FromCompositeFieldPath
    - fromFieldPath: metadata.labels['controlling.example.cloud/product']
      policy:
        fromFieldPath: Optional
      toFieldPath: metadata.labels['controlling.example.cloud/product']
      type: FromCompositeFieldPath
    - fromFieldPath: metadata.labels['tags.example.cloud/account']
      policy:
        fromFieldPath: Optional
      toFieldPath: metadata.labels['tags.example.cloud/account']
      type: FromCompositeFieldPath
    - fromFieldPath: metadata.labels['tags.example.cloud/environment']
      policy:
        fromFieldPath: Optional
      toFieldPath: metadata.labels['tags.example.cloud/environment']
      type: FromCompositeFieldPath
    - fromFieldPath: metadata.labels['tags.example.cloud/protection-requirement']
      policy:
        fromFieldPath: Optional
      toFieldPath: metadata.labels['tags.example.cloud/protection-requirement']
      type: FromCompositeFieldPath
    - fromFieldPath: metadata.labels['tags.example.cloud/repourl']
      policy:
        fromFieldPath: Optional
      toFieldPath: metadata.labels['tags.example.cloud/repourl']
      type: FromCompositeFieldPath
    - fromFieldPath: metadata.labels['tags.example.cloud/zone']
      policy:
        fromFieldPath: Optional
      toFieldPath: metadata.labels['tags.example.cloud/zone']
      type: FromCompositeFieldPath
  - name: Tags
    patches:
    - fromFieldPath: metadata.labels[tags.example.cloud/account]
      policy:
        fromFieldPath: Required
      toFieldPath: spec.forProvider.tags[0].value
      type: FromCompositeFieldPath
    - fromFieldPath: metadata.labels[tags.example.cloud/environment]
      policy:
        fromFieldPath: Required
      toFieldPath: spec.forProvider.tags[1].value
      type: FromCompositeFieldPath
    - fromFieldPath: metadata.labels[tags.example.cloud/protection-requirement]
      policy:
        fromFieldPath: Required
      toFieldPath: spec.forProvider.tags[2].value
      type: FromCompositeFieldPath
    - fromFieldPath: metadata.labels[tags.example.cloud/repourl]
      policy:
        fromFieldPath: Required
      toFieldPath: spec.forProvider.tags[3].value
      type: FromCompositeFieldPath
    - fromFieldPath: metadata.labels[tags.example.cloud/zone]
      policy:
        fromFieldPath: Required
      toFieldPath: spec.forProvider.tags[4].value
      type: FromCompositeFieldPath
  resources:
  - base:
      apiVersion: rds.aws.crossplane.io/v1alpha1
      kind: DBInstance
      metadata:
        labels:
          commonLabelA: commonLabelAValue
          commonLabelB: commonLabelBValue
      spec:
        forProvider:
          tags:
          - key: tags.example.cloud/account
          - key: tags.example.cloud/environment
          - key: tags.example.cloud/protection-requirement
          - key: tags.example.cloud/repourl
          - key: tags.example.cloud/zone
          - key: commonLocalTagA
            value: comonLocalTagAValue
          - key: commonLocalTagB
            value: comonLocalTagBValue
          - key: commonTagA
            value: comonTagAValue
          - key: commonTagB
            value: comonTagBValue
        providerConfigRef:
          name: default
        writeConnectionSecretToRef:
          namespace: crossplane-system
    connectionDetails:
    - fromConnectionSecretKey: username
    - fromConnectionSecretKey: password
    - fromConnectionSecretKey: endpoint
    - fromConnectionSecretKey: port
    name: DBInstance
    patches:
    - patchSetName: Name
      type: PatchSet
    - patchSetName: External-Name
      type: PatchSet
    - patchSetName: Common
      type: PatchSet
    - patchSetName: Parameters
      type: PatchSet
    - patchSetName: Labels
      type: PatchSet
    - patchSetName: Tags
      type: PatchSet
    - fromFieldPath: status.atProvider.activityStreamEngineNativeAuditFieldsIncluded
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.activityStreamEngineNativeAuditFieldsIncluded
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.activityStreamKMSKeyID
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.activityStreamKMSKeyID
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.activityStreamKinesisStreamName
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.activityStreamKinesisStreamName
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.activityStreamMode
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.activityStreamMode
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.activityStreamStatus
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.activityStreamStatus
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.associatedRoles
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.associatedRoles
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.automaticRestartTime
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.automaticRestartTime
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.automationMode
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.automationMode
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.awsBackupRecoveryPointARN
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.awsBackupRecoveryPointARN
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.caCertificateIdentifier
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.caCertificateIdentifier
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.customerOwnedIPEnabled
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.customerOwnedIPEnabled
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.dbInstanceARN
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.dbInstanceARN
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.dbInstanceAutomatedBackupsReplications
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.dbInstanceAutomatedBackupsReplications
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.dbInstanceIdentifier
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.dbInstanceIdentifier
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.dbInstancePort
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.dbInstancePort
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.dbInstanceStatus
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.dbInstanceStatus
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.dbParameterGroups
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.dbParameterGroups
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.dbSecurityGroups
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.dbSecurityGroups
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.dbSubnetGroup.dbSubnetGroupARN
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.dbSubnetGroup.dbSubnetGroupARN
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.dbSubnetGroup.dbSubnetGroupDescription
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.dbSubnetGroup.dbSubnetGroupDescription
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.dbSubnetGroup.dbSubnetGroupName
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.dbSubnetGroup.dbSubnetGroupName
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.dbSubnetGroup.subnetGroupStatus
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.dbSubnetGroup.subnetGroupStatus
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.dbSubnetGroup.subnets
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.dbSubnetGroup.subnets
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.dbSubnetGroup.vpcID
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.dbSubnetGroup.vpcID
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.dbiResourceID
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.dbiResourceID
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.domainMemberships
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.domainMemberships
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.enabledCloudwatchLogsExports
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.enabledCloudwatchLogsExports
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.endpoint.address
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.endpoint.address
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.endpoint.hostedZoneID
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.endpoint.hostedZoneID
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.endpoint.port
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.endpoint.port
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.enhancedMonitoringResourceARN
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.enhancedMonitoringResourceARN
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.iamDatabaseAuthenticationEnabled
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.iamDatabaseAuthenticationEnabled
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.instanceCreateTime
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.instanceCreateTime
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.latestRestorableTime
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.latestRestorableTime
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.listenerEndpoint.address
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.listenerEndpoint.address
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.listenerEndpoint.hostedZoneID
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.listenerEndpoint.hostedZoneID
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.listenerEndpoint.port
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.listenerEndpoint.port
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.optionGroupMemberships
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.optionGroupMemberships
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.pendingModifiedValues.allocatedStorage
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.pendingModifiedValues.allocatedStorage
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.pendingModifiedValues.automationMode
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.pendingModifiedValues.automationMode
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.pendingModifiedValues.backupRetentionPeriod
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.pendingModifiedValues.backupRetentionPeriod
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.pendingModifiedValues.caCertificateIdentifier
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.pendingModifiedValues.caCertificateIdentifier
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.pendingModifiedValues.dbInstanceClass
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.pendingModifiedValues.dbInstanceClass
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.pendingModifiedValues.dbInstanceIdentifier
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.pendingModifiedValues.dbInstanceIdentifier
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.pendingModifiedValues.dbSubnetGroupName
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.pendingModifiedValues.dbSubnetGroupName
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.pendingModifiedValues.engineVersion
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.pendingModifiedValues.engineVersion
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.pendingModifiedValues.iamDatabaseAuthenticationEnabled
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.pendingModifiedValues.iamDatabaseAuthenticationEnabled
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.pendingModifiedValues.iops
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.pendingModifiedValues.iops
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.pendingModifiedValues.licenseModel
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.pendingModifiedValues.licenseModel
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.pendingModifiedValues.masterUserPassword
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.pendingModifiedValues.masterUserPassword
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.pendingModifiedValues.multiAZ
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.pendingModifiedValues.multiAZ
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.pendingModifiedValues.pendingCloudwatchLogsExports.logTypesToDisable
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.pendingModifiedValues.pendingCloudwatchLogsExports.logTypesToDisable
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.pendingModifiedValues.pendingCloudwatchLogsExports.logTypesToEnable
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.pendingModifiedValues.pendingCloudwatchLogsExports.logTypesToEnable
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.pendingModifiedValues.port
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.pendingModifiedValues.port
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.pendingModifiedValues.processorFeatures
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.pendingModifiedValues.processorFeatures
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.pendingModifiedValues.resumeFullAutomationModeTime
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.pendingModifiedValues.resumeFullAutomationModeTime
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.pendingModifiedValues.storageType
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.pendingModifiedValues.storageType
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.performanceInsightsEnabled
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.performanceInsightsEnabled
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.readReplicaDBClusterIdentifiers
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.readReplicaDBClusterIdentifiers
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.readReplicaDBInstanceIdentifiers
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.readReplicaDBInstanceIdentifiers
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.readReplicaSourceDBInstanceIdentifier
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.readReplicaSourceDBInstanceIdentifier
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.replicaMode
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.replicaMode
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.resumeFullAutomationModeTime
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.resumeFullAutomationModeTime
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.secondaryAvailabilityZone
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.secondaryAvailabilityZone
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.statusInfos
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.statusInfos
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.tagList
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.tagList
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.vpcSecurityGroups
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.vpcSecurityGroups
      type: ToCompositeFieldPath
    - fromFieldPath: metadata.annotations["crossplane.io/external-name"]
      policy:
        fromFieldPath: Optional
      toFieldPath: status.uid
      type: ToCompositeFieldPath
    - fromFieldPath: status.conditions
      policy:
        fromFieldPath: Optional
      toFieldPath: status.observed.conditions
      type: ToCompositeFieldPath
    - fromFieldPath: metadata.uid
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.writeConnectionSecretToRef.name
      transforms:
      - string:
          fmt: '%s-secret'
        type: string
      type: FromCompositeFieldPath
  writeConnectionSecretsToNamespace: crossplane-system
