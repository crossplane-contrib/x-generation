## WARNING: This file was autogenerated!
## Manual modifications will be overwritten
## unless ignore: true is set in generate.yaml!
## Last Modification: 10:15:04 on 01-08-2024.

apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  labels:
    example.cloud/provider: example
  name: compositekey.kms.aws.example.cloud
spec:
  compositeTypeRef:
    apiVersion: kms.aws.example.cloud/v1alpha1
    kind: CompositeKey
  patchSets:
  - name: Name
    patches:
    - fromFieldPath: metadata.labels[crossplane.io/claim-name]
      toFieldPath: metadata.name
      type: FromCompositeFieldPath
  - name: External-Name
    patches:
    - fromFieldPath: metadata.annotations[crossplane.io/external-name]
      policy:
        fromFieldPath: Optional
      toFieldPath: metadata.annotations[crossplane.io/external-name]
      type: FromCompositeFieldPath
  - name: Common
    patches:
    - fromFieldPath: metadata.labels['crossplane.io/claim-name']
      policy:
        fromFieldPath: Optional
      toFieldPath: metadata.labels['crossplane.io/claim-name']
      type: FromCompositeFieldPath
    - fromFieldPath: metadata.labels['crossplane.io/claim-namespace']
      policy:
        fromFieldPath: Optional
      toFieldPath: metadata.labels['crossplane.io/claim-namespace']
      type: FromCompositeFieldPath
    - fromFieldPath: metadata.labels['crossplane.io/composite']
      policy:
        fromFieldPath: Optional
      toFieldPath: metadata.labels['crossplane.io/composite']
      type: FromCompositeFieldPath
    - fromFieldPath: metadata.labels['external-name']
      policy:
        fromFieldPath: Optional
      toFieldPath: metadata.labels['external-name']
      type: FromCompositeFieldPath
  - name: Parameters
    patches:
    - fromFieldPath: spec.deletionPolicy
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.deletionPolicy
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.bypassPolicyLockoutSafetyCheck
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.bypassPolicyLockoutSafetyCheck
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.customKeyStoreID
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.customKeyStoreID
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.customerMasterKeySpec
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.customerMasterKeySpec
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.description
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.description
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.enabled
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.enabled
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.keySpec
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.keySpec
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.keyUsage
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.keyUsage
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.multiRegion
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.multiRegion
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.origin
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.origin
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.pendingWindowInDays
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.pendingWindowInDays
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.policy
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.policy
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.region
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.region
      type: FromCompositeFieldPath
    - fromFieldPath: spec.providerConfigRef.name
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.providerConfigRef.name
      type: FromCompositeFieldPath
    - fromFieldPath: spec.providerConfigRef.policy.resolution
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.providerConfigRef.policy.resolution
      type: FromCompositeFieldPath
    - fromFieldPath: spec.providerConfigRef.policy.resolve
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.providerConfigRef.policy.resolve
      type: FromCompositeFieldPath
    - fromFieldPath: spec.publishConnectionDetailsTo.configRef.name
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.publishConnectionDetailsTo.configRef.name
      type: FromCompositeFieldPath
    - fromFieldPath: spec.publishConnectionDetailsTo.configRef.policy.resolution
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.publishConnectionDetailsTo.configRef.policy.resolution
      type: FromCompositeFieldPath
    - fromFieldPath: spec.publishConnectionDetailsTo.configRef.policy.resolve
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.publishConnectionDetailsTo.configRef.policy.resolve
      type: FromCompositeFieldPath
    - fromFieldPath: spec.publishConnectionDetailsTo.metadata.annotations
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.publishConnectionDetailsTo.metadata.annotations
      type: FromCompositeFieldPath
    - fromFieldPath: spec.publishConnectionDetailsTo.metadata.labels
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.publishConnectionDetailsTo.metadata.labels
      type: FromCompositeFieldPath
    - fromFieldPath: spec.publishConnectionDetailsTo.metadata.type
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.publishConnectionDetailsTo.metadata.type
      type: FromCompositeFieldPath
    - fromFieldPath: spec.publishConnectionDetailsTo.name
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.publishConnectionDetailsTo.name
      type: FromCompositeFieldPath
  - name: Labels
    patches:
    - fromFieldPath: metadata.labels['controlling.example.cloud/cost-reference']
      policy:
        fromFieldPath: Optional
      toFieldPath: metadata.labels['controlling.example.cloud/cost-reference']
      type: FromCompositeFieldPath
    - fromFieldPath: metadata.labels['controlling.example.cloud/owner']
      policy:
        fromFieldPath: Optional
      toFieldPath: metadata.labels['controlling.example.cloud/owner']
      type: FromCompositeFieldPath
    - fromFieldPath: metadata.labels['controlling.example.cloud/product']
      policy:
        fromFieldPath: Optional
      toFieldPath: metadata.labels['controlling.example.cloud/product']
      type: FromCompositeFieldPath
    - fromFieldPath: metadata.labels['tags.example.cloud/account']
      policy:
        fromFieldPath: Optional
      toFieldPath: metadata.labels['tags.example.cloud/account']
      type: FromCompositeFieldPath
    - fromFieldPath: metadata.labels['tags.example.cloud/environment']
      policy:
        fromFieldPath: Optional
      toFieldPath: metadata.labels['tags.example.cloud/environment']
      type: FromCompositeFieldPath
    - fromFieldPath: metadata.labels['tags.example.cloud/protection-requirement']
      policy:
        fromFieldPath: Optional
      toFieldPath: metadata.labels['tags.example.cloud/protection-requirement']
      type: FromCompositeFieldPath
    - fromFieldPath: metadata.labels['tags.example.cloud/repourl']
      policy:
        fromFieldPath: Optional
      toFieldPath: metadata.labels['tags.example.cloud/repourl']
      type: FromCompositeFieldPath
    - fromFieldPath: metadata.labels['tags.example.cloud/zone']
      policy:
        fromFieldPath: Optional
      toFieldPath: metadata.labels['tags.example.cloud/zone']
      type: FromCompositeFieldPath
  - name: Tags
    patches:
    - fromFieldPath: metadata.labels[tags.example.cloud/account]
      policy:
        fromFieldPath: Required
      toFieldPath: spec.forProvider.tags[0].tagValue
      type: FromCompositeFieldPath
    - fromFieldPath: metadata.labels[tags.example.cloud/environment]
      policy:
        fromFieldPath: Required
      toFieldPath: spec.forProvider.tags[1].tagValue
      type: FromCompositeFieldPath
    - fromFieldPath: metadata.labels[tags.example.cloud/protection-requirement]
      policy:
        fromFieldPath: Required
      toFieldPath: spec.forProvider.tags[2].tagValue
      type: FromCompositeFieldPath
    - fromFieldPath: metadata.labels[tags.example.cloud/repourl]
      policy:
        fromFieldPath: Required
      toFieldPath: spec.forProvider.tags[3].tagValue
      type: FromCompositeFieldPath
    - fromFieldPath: metadata.labels[tags.example.cloud/zone]
      policy:
        fromFieldPath: Required
      toFieldPath: spec.forProvider.tags[4].tagValue
      type: FromCompositeFieldPath
  resources:
  - base:
      apiVersion: kms.aws.crossplane.io/v1alpha1
      kind: Key
      metadata:
        labels:
          commonLabelA: commonLabelAValue
          commonLabelB: commonLabelBValue
      spec:
        forProvider:
          enableKeyRotation: true
          tags:
          - tagKey: tags.example.cloud/account
          - tagKey: tags.example.cloud/environment
          - tagKey: tags.example.cloud/protection-requirement
          - tagKey: tags.example.cloud/repourl
          - tagKey: tags.example.cloud/zone
          - tagKey: commonLocalTagA
            tagValue: comonLocalTagAValue
          - tagKey: commonLocalTagB
            tagValue: comonLocalTagBValue
          - tagKey: commonTagA
            tagValue: comonTagAValue
          - tagKey: commonTagB
            tagValue: comonTagBValue
        providerConfigRef:
          name: default
    name: Key
    patches:
    - patchSetName: Name
      type: PatchSet
    - patchSetName: External-Name
      type: PatchSet
    - patchSetName: Common
      type: PatchSet
    - patchSetName: Parameters
      type: PatchSet
    - patchSetName: Labels
      type: PatchSet
    - patchSetName: Tags
      type: PatchSet
    - fromFieldPath: status.atProvider.arn
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.arn
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.awsAccountID
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.awsAccountID
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.cloudHsmClusterID
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.cloudHsmClusterID
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.creationDate
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.creationDate
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.deletionDate
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.deletionDate
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.enabled
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.enabled
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.encryptionAlgorithms
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.encryptionAlgorithms
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.expirationModel
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.expirationModel
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.keyID
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.keyID
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.keyManager
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.keyManager
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.keyState
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.keyState
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.multiRegionConfiguration.multiRegionKeyType
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.multiRegionConfiguration.multiRegionKeyType
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.multiRegionConfiguration.primaryKey.arn
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.multiRegionConfiguration.primaryKey.arn
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.multiRegionConfiguration.primaryKey.region
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.multiRegionConfiguration.primaryKey.region
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.multiRegionConfiguration.replicaKeys
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.multiRegionConfiguration.replicaKeys
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.pendingDeletionWindowInDays
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.pendingDeletionWindowInDays
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.signingAlgorithms
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.signingAlgorithms
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.validTo
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.validTo
      type: ToCompositeFieldPath
    - fromFieldPath: metadata.annotations["crossplane.io/external-name"]
      policy:
        fromFieldPath: Optional
      toFieldPath: status.uid
      type: ToCompositeFieldPath
    - fromFieldPath: status.conditions
      policy:
        fromFieldPath: Optional
      toFieldPath: status.observed.conditions
      type: ToCompositeFieldPath
